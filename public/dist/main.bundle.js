/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/url-pattern/lib/url-pattern.js":
/*!*****************************************************!*\
  !*** ./node_modules/url-pattern/lib/url-pattern.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Generated by CoffeeScript 1.10.0\nvar slice = [].slice;\n\n(function(root, factory) {\n  if (( true) && (__webpack_require__.amdO != null)) {\n    return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( true && exports !== null) {\n    return module.exports = factory();\n  } else {\n    return root.UrlPattern = factory();\n  }\n})(this, function() {\n  var P, UrlPattern, astNodeContainsSegmentsForProvidedParams, astNodeToNames, astNodeToRegexString, baseAstNodeToRegexString, concatMap, defaultOptions, escapeForRegex, getParam, keysAndValuesToObject, newParser, regexGroupCount, stringConcatMap, stringify;\n  escapeForRegex = function(string) {\n    return string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n  concatMap = function(array, f) {\n    var i, length, results;\n    results = [];\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      results = results.concat(f(array[i]));\n    }\n    return results;\n  };\n  stringConcatMap = function(array, f) {\n    var i, length, result;\n    result = '';\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      result += f(array[i]);\n    }\n    return result;\n  };\n  regexGroupCount = function(regex) {\n    return (new RegExp(regex.toString() + '|')).exec('').length - 1;\n  };\n  keysAndValuesToObject = function(keys, values) {\n    var i, key, length, object, value;\n    object = {};\n    i = -1;\n    length = keys.length;\n    while (++i < length) {\n      key = keys[i];\n      value = values[i];\n      if (value == null) {\n        continue;\n      }\n      if (object[key] != null) {\n        if (!Array.isArray(object[key])) {\n          object[key] = [object[key]];\n        }\n        object[key].push(value);\n      } else {\n        object[key] = value;\n      }\n    }\n    return object;\n  };\n  P = {};\n  P.Result = function(value, rest) {\n    this.value = value;\n    this.rest = rest;\n  };\n  P.Tagged = function(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  };\n  P.tag = function(tag, parser) {\n    return function(input) {\n      var result, tagged;\n      result = parser(input);\n      if (result == null) {\n        return;\n      }\n      tagged = new P.Tagged(tag, result.value);\n      return new P.Result(tagged, result.rest);\n    };\n  };\n  P.regex = function(regex) {\n    return function(input) {\n      var matches, result;\n      matches = regex.exec(input);\n      if (matches == null) {\n        return;\n      }\n      result = matches[0];\n      return new P.Result(result, input.slice(result.length));\n    };\n  };\n  P.sequence = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, rest, result, values;\n      i = -1;\n      length = parsers.length;\n      values = [];\n      rest = input;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(rest);\n        if (result == null) {\n          return;\n        }\n        values.push(result.value);\n        rest = result.rest;\n      }\n      return new P.Result(values, rest);\n    };\n  };\n  P.pick = function() {\n    var indexes, parsers;\n    indexes = arguments[0], parsers = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return function(input) {\n      var array, result;\n      result = P.sequence.apply(P, parsers)(input);\n      if (result == null) {\n        return;\n      }\n      array = result.value;\n      result.value = array[indexes];\n      return result;\n    };\n  };\n  P.string = function(string) {\n    var length;\n    length = string.length;\n    return function(input) {\n      if (input.slice(0, length) === string) {\n        return new P.Result(string, input.slice(length));\n      }\n    };\n  };\n  P.lazy = function(fn) {\n    var cached;\n    cached = null;\n    return function(input) {\n      if (cached == null) {\n        cached = fn();\n      }\n      return cached(input);\n    };\n  };\n  P.baseMany = function(parser, end, stringResult, atLeastOneResultRequired, input) {\n    var endResult, parserResult, rest, results;\n    rest = input;\n    results = stringResult ? '' : [];\n    while (true) {\n      if (end != null) {\n        endResult = end(rest);\n        if (endResult != null) {\n          break;\n        }\n      }\n      parserResult = parser(rest);\n      if (parserResult == null) {\n        break;\n      }\n      if (stringResult) {\n        results += parserResult.value;\n      } else {\n        results.push(parserResult.value);\n      }\n      rest = parserResult.rest;\n    }\n    if (atLeastOneResultRequired && results.length === 0) {\n      return;\n    }\n    return new P.Result(results, rest);\n  };\n  P.many1 = function(parser) {\n    return function(input) {\n      return P.baseMany(parser, null, false, true, input);\n    };\n  };\n  P.concatMany1Till = function(parser, end) {\n    return function(input) {\n      return P.baseMany(parser, end, true, true, input);\n    };\n  };\n  P.firstChoice = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, result;\n      i = -1;\n      length = parsers.length;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(input);\n        if (result != null) {\n          return result;\n        }\n      }\n    };\n  };\n  newParser = function(options) {\n    var U;\n    U = {};\n    U.wildcard = P.tag('wildcard', P.string(options.wildcardChar));\n    U.optional = P.tag('optional', P.pick(1, P.string(options.optionalSegmentStartChar), P.lazy(function() {\n      return U.pattern;\n    }), P.string(options.optionalSegmentEndChar)));\n    U.name = P.regex(new RegExp(\"^[\" + options.segmentNameCharset + \"]+\"));\n    U.named = P.tag('named', P.pick(1, P.string(options.segmentNameStartChar), P.lazy(function() {\n      return U.name;\n    })));\n    U.escapedChar = P.pick(1, P.string(options.escapeChar), P.regex(/^./));\n    U[\"static\"] = P.tag('static', P.concatMany1Till(P.firstChoice(P.lazy(function() {\n      return U.escapedChar;\n    }), P.regex(/^./)), P.firstChoice(P.string(options.segmentNameStartChar), P.string(options.optionalSegmentStartChar), P.string(options.optionalSegmentEndChar), U.wildcard)));\n    U.token = P.lazy(function() {\n      return P.firstChoice(U.wildcard, U.optional, U.named, U[\"static\"]);\n    });\n    U.pattern = P.many1(P.lazy(function() {\n      return U.token;\n    }));\n    return U;\n  };\n  defaultOptions = {\n    escapeChar: '\\\\',\n    segmentNameStartChar: ':',\n    segmentValueCharset: 'a-zA-Z0-9-_~ %',\n    segmentNameCharset: 'a-zA-Z0-9',\n    optionalSegmentStartChar: '(',\n    optionalSegmentEndChar: ')',\n    wildcardChar: '*'\n  };\n  baseAstNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return baseAstNodeToRegexString(node, segmentValueCharset);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return '(.*?)';\n      case 'named':\n        return \"([\" + segmentValueCharset + \"]+)\";\n      case 'static':\n        return escapeForRegex(astNode.value);\n      case 'optional':\n        return '(?:' + baseAstNodeToRegexString(astNode.value, segmentValueCharset) + ')?';\n    }\n  };\n  astNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (segmentValueCharset == null) {\n      segmentValueCharset = defaultOptions.segmentValueCharset;\n    }\n    return '^' + baseAstNodeToRegexString(astNode, segmentValueCharset) + '$';\n  };\n  astNodeToNames = function(astNode) {\n    if (Array.isArray(astNode)) {\n      return concatMap(astNode, astNodeToNames);\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return ['_'];\n      case 'named':\n        return [astNode.value];\n      case 'static':\n        return [];\n      case 'optional':\n        return astNodeToNames(astNode.value);\n    }\n  };\n  getParam = function(params, key, nextIndexes, sideEffects) {\n    var index, maxIndex, result, value;\n    if (sideEffects == null) {\n      sideEffects = false;\n    }\n    value = params[key];\n    if (value == null) {\n      if (sideEffects) {\n        throw new Error(\"no values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    index = nextIndexes[key] || 0;\n    maxIndex = Array.isArray(value) ? value.length - 1 : 0;\n    if (index > maxIndex) {\n      if (sideEffects) {\n        throw new Error(\"too few values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    result = Array.isArray(value) ? value[index] : value;\n    if (sideEffects) {\n      nextIndexes[key] = index + 1;\n    }\n    return result;\n  };\n  astNodeContainsSegmentsForProvidedParams = function(astNode, params, nextIndexes) {\n    var i, length;\n    if (Array.isArray(astNode)) {\n      i = -1;\n      length = astNode.length;\n      while (++i < length) {\n        if (astNodeContainsSegmentsForProvidedParams(astNode[i], params, nextIndexes)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, false) != null;\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, false) != null;\n      case 'static':\n        return false;\n      case 'optional':\n        return astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes);\n    }\n  };\n  stringify = function(astNode, params, nextIndexes) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return stringify(node, params, nextIndexes);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, true);\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, true);\n      case 'static':\n        return astNode.value;\n      case 'optional':\n        if (astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes)) {\n          return stringify(astNode.value, params, nextIndexes);\n        } else {\n          return '';\n        }\n    }\n  };\n  UrlPattern = function(arg1, arg2) {\n    var groupCount, options, parsed, parser, withoutWhitespace;\n    if (arg1 instanceof UrlPattern) {\n      this.isRegex = arg1.isRegex;\n      this.regex = arg1.regex;\n      this.ast = arg1.ast;\n      this.names = arg1.names;\n      return;\n    }\n    this.isRegex = arg1 instanceof RegExp;\n    if (!(('string' === typeof arg1) || this.isRegex)) {\n      throw new TypeError('argument must be a regex or a string');\n    }\n    if (this.isRegex) {\n      this.regex = arg1;\n      if (arg2 != null) {\n        if (!Array.isArray(arg2)) {\n          throw new Error('if first argument is a regex the second argument may be an array of group names but you provided something else');\n        }\n        groupCount = regexGroupCount(this.regex);\n        if (arg2.length !== groupCount) {\n          throw new Error(\"regex contains \" + groupCount + \" groups but array of group names contains \" + arg2.length);\n        }\n        this.names = arg2;\n      }\n      return;\n    }\n    if (arg1 === '') {\n      throw new Error('argument must not be the empty string');\n    }\n    withoutWhitespace = arg1.replace(/\\s+/g, '');\n    if (withoutWhitespace !== arg1) {\n      throw new Error('argument must not contain whitespace');\n    }\n    options = {\n      escapeChar: (arg2 != null ? arg2.escapeChar : void 0) || defaultOptions.escapeChar,\n      segmentNameStartChar: (arg2 != null ? arg2.segmentNameStartChar : void 0) || defaultOptions.segmentNameStartChar,\n      segmentNameCharset: (arg2 != null ? arg2.segmentNameCharset : void 0) || defaultOptions.segmentNameCharset,\n      segmentValueCharset: (arg2 != null ? arg2.segmentValueCharset : void 0) || defaultOptions.segmentValueCharset,\n      optionalSegmentStartChar: (arg2 != null ? arg2.optionalSegmentStartChar : void 0) || defaultOptions.optionalSegmentStartChar,\n      optionalSegmentEndChar: (arg2 != null ? arg2.optionalSegmentEndChar : void 0) || defaultOptions.optionalSegmentEndChar,\n      wildcardChar: (arg2 != null ? arg2.wildcardChar : void 0) || defaultOptions.wildcardChar\n    };\n    parser = newParser(options);\n    parsed = parser.pattern(arg1);\n    if (parsed == null) {\n      throw new Error(\"couldn't parse pattern\");\n    }\n    if (parsed.rest !== '') {\n      throw new Error(\"could only partially parse pattern\");\n    }\n    this.ast = parsed.value;\n    this.regex = new RegExp(astNodeToRegexString(this.ast, options.segmentValueCharset));\n    this.names = astNodeToNames(this.ast);\n  };\n  UrlPattern.prototype.match = function(url) {\n    var groups, match;\n    match = this.regex.exec(url);\n    if (match == null) {\n      return null;\n    }\n    groups = match.slice(1);\n    if (this.names) {\n      return keysAndValuesToObject(this.names, groups);\n    } else {\n      return groups;\n    }\n  };\n  UrlPattern.prototype.stringify = function(params) {\n    if (params == null) {\n      params = {};\n    }\n    if (this.isRegex) {\n      throw new Error(\"can't stringify patterns generated from a regex\");\n    }\n    if (params !== Object(params)) {\n      throw new Error(\"argument must be an object or undefined\");\n    }\n    return stringify(this.ast, params, {});\n  };\n  UrlPattern.escapeForRegex = escapeForRegex;\n  UrlPattern.concatMap = concatMap;\n  UrlPattern.stringConcatMap = stringConcatMap;\n  UrlPattern.regexGroupCount = regexGroupCount;\n  UrlPattern.keysAndValuesToObject = keysAndValuesToObject;\n  UrlPattern.P = P;\n  UrlPattern.newParser = newParser;\n  UrlPattern.defaultOptions = defaultOptions;\n  UrlPattern.astNodeToRegexString = astNodeToRegexString;\n  UrlPattern.astNodeToNames = astNodeToNames;\n  UrlPattern.getParam = getParam;\n  UrlPattern.astNodeContainsSegmentsForProvidedParams = astNodeContainsSegmentsForProvidedParams;\n  UrlPattern.stringify = stringify;\n  return UrlPattern;\n});\n\n\n//# sourceURL=webpack:///./node_modules/url-pattern/lib/url-pattern.js?");

/***/ }),

/***/ "./public/js/index.js":
/*!****************************!*\
  !*** ./public/js/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("const Home = __webpack_require__(/*! ../views/Home */ \"./public/views/Home.js\");\r\nconst Movies = __webpack_require__(/*! ../views/Movies */ \"./public/views/Movies.js\");\r\nconst Search = __webpack_require__(/*! ../views/Search */ \"./public/views/Search.js\");\r\nconst MovieView = __webpack_require__(/*! ../views/MoviesView */ \"./public/views/MoviesView.js\");\r\nconst urlPattern = __webpack_require__(/*! url-pattern */ \"./node_modules/url-pattern/lib/url-pattern.js\");\r\n\r\nconst CreatePattern = (path) => new urlPattern(path);\r\n\r\nconst router = async () => {\r\n  const routes = [\r\n    {\r\n      path: \"/\",\r\n      view: Home,\r\n    },\r\n    {\r\n      path: \"/movies\",\r\n      view: Movies,\r\n    },\r\n    { path: \"/search\", view: Search },\r\n    { path: \"/movies(/:title)\", view: MovieView },\r\n  ];\r\n\r\n  const potientailRoutes = routes.map((route) => {\r\n    return {\r\n      route: route,\r\n      params: CreatePattern(route.path).match(location.pathname),\r\n    };\r\n  });\r\n\r\n  let match = potientailRoutes.find((e) => e.params !== null);\r\n  if (!match) match = { route: routes[0], params: location.pathname };\r\n  console.log(match);\r\n\r\n  const view = new match.route.view(match.params);\r\n  const html = await view.getHtml(window.location.href);\r\n  console.log(html);\r\n\r\n  document.getElementById(\"root\").innerHTML = html;\r\n};\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  console.log(true);\r\n  router();\r\n});\r\nwindow.addEventListener(\"popstate\", () => {\r\n  router();\r\n});\r\n\r\nconst navigateTo = (url) => {\r\n  history.pushState(null, null, url);\r\n  router();\r\n};\r\n\r\n$(\".navbar1-link\").click(async (e) => {\r\n  e.preventDefault();\r\n  const url = e.target.href;\r\n  console.log(url);\r\n  history.pushState(null, null, url);\r\n  router();\r\n});\r\n\r\n/// hanfling filters\r\nconst filters = {\r\n  genre: \"\",\r\n  year: \"\",\r\n};\r\n\r\n$(\".genre\").change((e) => {\r\n  const value = e.target.value;\r\n  filters.genre = value;\r\n  if (!value) {\r\n    navigateTo(\"/movies\");\r\n  } else {\r\n    navigateTo(generateqyeryString());\r\n  }\r\n});\r\n\r\n$(\".year\").change((e) => {\r\n  const value = e.target.value;\r\n  filters.year = value;\r\n  if (value.isBlank) {\r\n    navigateTo(\"/movies\");\r\n  } else {\r\n    navigateTo(generateqyeryString());\r\n  }\r\n});\r\nfunction generateqyeryString() {\r\n  let qyeryString = \"/movies?\";\r\n  if (filters.genre) qyeryString += `Genre=${filters.genre}`;\r\n  if (filters.year) qyeryString += `Released_Year=${filters.year}`;\r\n\r\n  return qyeryString;\r\n}\r\n\r\n// $(\"#search-input\").change((e) => {\r\n//   const value = e.target.value;\r\n//   if (value.isBlank) {\r\n//     navigateTo(\"/movies\");\r\n//   } else navigateTo(`/search?q=${value}`);\r\n// });\r\n$(\"#search-input\").on(\"propertychange input\", function (e) {\r\n  const value = e.target.value;\r\n  console.log(value);\r\n  if (value.isBlank || !value) {\r\n    navigateTo(\"/movies\");\r\n  } else navigateTo(`/search?q=${value}`);\r\n});\r\n\r\nconst targetNode = document.getElementById(\"root\");\r\n\r\nconst config = { attributes: true, childList: true, subtree: true };\r\n\r\n// Callback function to execute when mutations are observed\r\nconst callback = function (mutationsList, observer) {\r\n  // Use traditional 'for loops' for IE 11\r\n  for (const mutation of mutationsList) {\r\n    if (mutation.type === \"childList\") {\r\n      $(\".movie-card\").click((e) => {\r\n        console.log(\"you clicked a card\");\r\n        navigateTo(`/movies/${e.currentTarget.title}`);\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// Create an observer instance linked to the callback function\r\nconst observer = new MutationObserver(callback);\r\n\r\n// Start observing the target node for configured mutations\r\nobserver.observe(targetNode, config);\r\n\n\n//# sourceURL=webpack:///./public/js/index.js?");

/***/ }),

/***/ "./public/views/Abstarct.js":
/*!**********************************!*\
  !*** ./public/views/Abstarct.js ***!
  \**********************************/
/***/ ((module) => {

eval("class Abstarct {\r\n  constructor(params) {\r\n    this.params = params;\r\n  }\r\n\r\n  setTitle(title) {\r\n    document.title = title;\r\n  }\r\n\r\n  async getHtml() {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nmodule.exports = Abstarct;\r\n\n\n//# sourceURL=webpack:///./public/views/Abstarct.js?");

/***/ }),

/***/ "./public/views/Home.js":
/*!******************************!*\
  !*** ./public/views/Home.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Abstarct = __webpack_require__(/*! ./Abstarct */ \"./public/views/Abstarct.js\");\r\n\r\nclass Home extends Abstarct {\r\n  constructor() {\r\n    super();\r\n    this.setTitle(\"Home\");\r\n    $(\".filter-bar\").hide();\r\n  }\r\n\r\n  async getHtml(url) {\r\n    const [indicatorHtml, crousalHtml, likedHtml] = await this.fetchData(url);\r\n\r\n    const homeHtml = `\r\n<main>\r\n\r\n            <!--\r\n        - #BANNER SECTION\r\n      -->\r\n            <div class=\"container\">\r\n                <div class=\"slider-container\">\r\n\r\n                <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                <div class=\"carousel-indicators\">\r\n    ${indicatorHtml}\r\n                </div>\r\n                <div class=\"carousel-inner\">\r\n                 ${crousalHtml}\r\n                </div>\r\n                <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\r\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Previous</span>\r\n  </button>\r\n  <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\r\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Next</span>\r\n  </button>\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <section class=\"movie-list-container\">\r\n                <h1 class=\"movie-list-title section-heading\" style=\"margin-bottom: -25px\">You Might Like</h1>\r\n                <div class=\"movie-list-wrapper\">\r\n                \r\n                    <div class=\"movie-list\">\r\n                        ${likedHtml}\r\n                    </div>\r\n                    <div  class=\"arrow \">&#10095;</div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <!--\r\n        - #CATEGORY SECTION\r\n      -->\r\n            <section class=\"category \" id=\"category \">\r\n\r\n                <h2 class=\"section-heading \">Category</h2>\r\n\r\n                <div class=\"category-grid \">\r\n                    <a href=\"/category/action\">\r\n                        <div class=\"category-card \" id=\"Action\">\r\n                            <img src=\"/images/action.jpg \" alt=\" \" class=\"card-img \">\r\n                            <div class=\"name \">Action</div>\r\n                            <div class=\"total \">100</div>\r\n                        </div>\r\n                    </a>\r\n                    <div  id=\"Comedy\" class=\"category-card \">\r\n                        <img src=\"/images/comedy.jpg \" alt=\" \" class=\"card-img \">\r\n                        <div class=\"name \">Comedy</div>\r\n                        <div class=\"total \">50</div>\r\n                    </div>\r\n\r\n                    <div  id=\"Thriller\" class=\"category-card \">\r\n                        <img src=\"/images/thriller.webp \" alt=\" \" class=\"card-img \">\r\n                        <div class=\"name \">Thriller</div>\r\n                        <div class=\"total \">20</div>\r\n                    </div>\r\n\r\n                    <div class=\"category-card \">\r\n                        <img src=\"/images/horror.jpg \" alt=\" \" class=\"card-img \">\r\n                        <div class=\"name \">Horror</div>\r\n                        <div class=\"total \">80</div>\r\n                    </div>\r\n\r\n                    <div class=\"category-card \">\r\n                        <img src=\"/images/adventure.jpg \" alt=\" \" class=\"card-img \">\r\n                        <div class=\"name \">Adventure</div>\r\n                        <div class=\"total \">100</div>\r\n                    </div>\r\n\r\n                    <div class=\"category-card \">\r\n                        <img src=\"/images/animated.jpg \" alt=\" \" class=\"card-img \">\r\n                        <div class=\"name \">Animated</div>\r\n                        <div class=\"total \">50</div>\r\n                    </div>\r\n\r\n                    <div class=\"category-card \">\r\n                        <img src=\"/images/crime.jpg \" alt=\" \" class=\"card-img \">\r\n                        <div class=\"name \">Crime</div>\r\n                        <div class=\"total \">20</div>\r\n                    </div>\r\n\r\n                    <div class=\"category-card \">\r\n                        <img src=\"/images/sci-fi.jpg \" alt=\" \" class=\"card-img \">\r\n                        <div class=\"name \">SCI-FI</div>\r\n                        <div class=\"total \">80</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </section>\r\n\r\n\r\n\r\n<script src=\"/js/slider.js\" ></script\r\n\r\n      \r\n\r\n        </main>`;\r\n\r\n    return homeHtml;\r\n  }\r\n\r\n  async fetchData(url) {\r\n    let crousalHtml = \"\";\r\n    let likedHtml = \"\";\r\n    let indicatorHtml = \"\";\r\n    try {\r\n      const data = await fetch(\"/api\").then((res) => res.json());\r\n\r\n      data.carousalData.forEach((e, i) => {\r\n        indicatorHtml += `    <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"${i}\" class=\"active\" aria-current=\"true\" aria-label=\"Slide ${\r\n          i + 1\r\n        }\"></button>\r\n        `;\r\n\r\n        crousalHtml += `\r\n  <div class=\"carousel-item ${i === 0 ? \"active\" : \"\"}\">\r\n        \r\n         \r\n        <section class=\"banner\">\r\n            <div class=\"banner-card\">\r\n\r\n                <img src=${\r\n                  e.Poster_Link\r\n                } class=\"banner-img\" style=\"width=100px\" alt=\"\">\r\n\r\n                <div class=\"card-content\">\r\n                    <div class=\"card-info\">\r\n\r\n                        <div class=\"genre\">\r\n                            <ion-icon name=\"film\"></ion-icon>\r\n                            <span>${e.Genre}</span>\r\n                        </div>\r\n\r\n                        <div class=\"year\">\r\n                            <ion-icon name=\"calendar\"></ion-icon>\r\n                            <span>${e.Released_Year} </span>\r\n                        </div>\r\n\r\n                        <div class=\"duration\">\r\n                            <ion-icon name=\"time\"></ion-icon>\r\n                            <span>${e.Runtime}</span>\r\n                        </div>\r\n\r\n                        <div class=\"quality\">\r\n                            ${e.IMDB_Rating}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <h2 class=\"card-title\">\r\n                         ${e.Series_Title}  \r\n                    </h2>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    \r\n</div>\r\n\r\n\r\n      `;\r\n      });\r\n\r\n      data.likedData.forEach((e) => {\r\n        likedHtml += `\r\n            <div class=\"movie-list-item\">\r\n                <img class=\"movie-list-item-img\" src=${e.Poster_Link} alt=\" \">\r\n\r\n                <span class=\"movie-list-item-title \"> ${e.Series_Title}</span>\r\n                <p class=\"movie-list-item-desc \">\r\n                    ${e.Overview}\r\n                </p>\r\n                <button class=\"movie-list-item-button \">Watch</button>\r\n            </div>\r\n            `;\r\n      });\r\n\r\n      return [indicatorHtml, crousalHtml, likedHtml];\r\n    } catch (e) {\r\n      return `<h1>${e}<h1>`;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Home;\r\n\n\n//# sourceURL=webpack:///./public/views/Home.js?");

/***/ }),

/***/ "./public/views/Movies.js":
/*!********************************!*\
  !*** ./public/views/Movies.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Abstarct = __webpack_require__(/*! ./Abstarct */ \"./public/views/Abstarct.js\");\r\n\r\nclass Movies extends Abstarct {\r\n  constructor(params) {\r\n    super(params);\r\n    this.setTitle(\"Movies\");\r\n    $(\".filter-bar\").show();\r\n  }\r\n\r\n  async getHtml(url) {\r\n    const moviesHtml = await this.fetchData(this.generateQyeryString(url));\r\n\r\n    const html = `    <section class=\"movies\">\r\n\r\n    <!--\r\n- filter bar\r\n-->\r\n\r\n    <!--\r\n- movies grid\r\n-->\r\n\r\n    <div class=\"movies-grid\">\r\n      \r\n${moviesHtml}\r\n\r\n    </div>\r\n\r\n    <!--\r\n- load more button\r\n-->\r\n    <button class=\"load-more\">LOAD MORE</button>\r\n\r\n</section>\r\n`;\r\n    return html;\r\n  }\r\n\r\n  async fetchData(url) {\r\n    let moviesHtml = \"\";\r\n    try {\r\n      const data = await fetch(url).then((res) => res.json());\r\n\r\n      data.forEach((e) => {\r\n        moviesHtml += `  \r\n        <div title=\"${e.Series_Title}\" class=\"movie-card\">\r\n            <div class=\"card-head\">\r\n                <img src=${e.Poster_Link} alt=\"\" class=\"card-img\">\r\n                <div class=\"card-overlay\">\r\n                    <div class=\"bookmark\">\r\n                        <ion-icon name=\"bookmark-outline\"></ion-icon>\r\n                    </div>\r\n                    <div class=\"rating\">\r\n                        <ion-icon name=\"star-outline\"></ion-icon>\r\n                        <span>${e.IMDB_Rating}</span>\r\n                    </div>\r\n                    <div class=\"play\">\r\n                        <ion-icon name=\"play-circle-outline\"></ion-icon>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                    ${e.Series_Title}\r\n                </h3>\r\n                <div class=\"card-info\">\r\n                    <span class=\"genre\">${e.Genre}</span>\r\n                    <span class=\"year\">${e.Released_Year}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n`;\r\n      });\r\n\r\n      return moviesHtml;\r\n    } catch (e) {\r\n      return `<h1> Failed to load movies</h1>`;\r\n    }\r\n  }\r\n\r\n  generateQyeryString(url) {\r\n    let qyeryString = \"/api/movies?\";\r\n    const qyery = url.split(\"?\");\r\n    if (qyery.length > 1) qyeryString += qyery[1];\r\n\r\n    return qyeryString;\r\n  }\r\n}\r\n\r\nmodule.exports = Movies;\r\n\n\n//# sourceURL=webpack:///./public/views/Movies.js?");

/***/ }),

/***/ "./public/views/MoviesView.js":
/*!************************************!*\
  !*** ./public/views/MoviesView.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Abstarct = __webpack_require__(/*! ./Abstarct */ \"./public/views/Abstarct.js\");\r\n\r\nclass MovieView extends Abstarct {\r\n  constructor(params) {\r\n    super(params);\r\n    this.setTitle(\"Movies\");\r\n    $(\".filter-bar\").hide();\r\n  }\r\n\r\n  async getHtml() {\r\n    const movieHtml = await this.fetchData();\r\n\r\n    return `\r\n    <div class=\"movie-container\">\r\n              ${movieHtml}  \r\n    </div>\r\n    \r\n    `;\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      const data = await fetch(`/api/movies/${this.params.title}`).then((res) =>\r\n        res.json()\r\n      );\r\n      console.log(data);\r\n      const html = `\r\n<div class=\"movie-card col\">\r\n<div class=\"card-head\">\r\n    <img src=${data[0].Poster_Link} alt=\"\" class=\"card-img\">\r\n    <div class=\"card-overlay\">\r\n        <div class=\"bookmark\">\r\n            <ion-icon name=\"bookmark-outline\"></ion-icon>\r\n        </div>\r\n        <div class=\"rating\">\r\n            <ion-icon name=\"star-outline\"></ion-icon>\r\n            <span>${data[0].IMDB_Rating}</span>\r\n        </div>\r\n        <div class=\"play\">\r\n            <ion-icon name=\"play-circle-outline\"></ion-icon>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"card-body\">\r\n    <h3 class=\"card-title\">\r\n        ${data[0].Series_Title}\r\n    </h3>\r\n    <div class=\"card-info\">\r\n        <span class=\"genre\">${data[0].Genre}</span>\r\n        <span class=\"year\">${data[0].Released_Year}</span>\r\n    </div>\r\n</div>\r\n</div>\r\n<div>\r\n<div class=\"movie-container\">\r\n<h5>Overiview:</h5> \r\n<h4>${data[0].Overview}</h4>\r\n        </div>\r\n        <div class=\"movie-container\">\r\n            <h5>Director:</h5> \r\n            <h6>${data[0].COL10}</h6>\r\n                              </div>\r\n                              <div class=\"movie-container\">\r\n                              <h5>Cast:</h5> \r\n                              <h6>${data[0].COL11} , ${data[0].COL12} , ${data[0].COL13} , ${data[0].COL14}</h6>\r\n                                                </div>\r\n        </div>\r\n\r\n\r\n</div>\r\n\r\n`;\r\n\r\n      return html;\r\n    } catch (err) {\r\n      return `<h1> ${err}<h1>`;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = MovieView;\r\n\n\n//# sourceURL=webpack:///./public/views/MoviesView.js?");

/***/ }),

/***/ "./public/views/Search.js":
/*!********************************!*\
  !*** ./public/views/Search.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Abstarct = __webpack_require__(/*! ./Abstarct */ \"./public/views/Abstarct.js\");\r\n\r\nclass Search extends Abstarct {\r\n  constructor(params) {\r\n    super(params);\r\n    this.setTitle(\"Movies\");\r\n  }\r\n\r\n  async getHtml(url) {\r\n    const moviesHtml = await this.fetchData(this.generateQyeryString(url));\r\n\r\n    const html = `    <section class=\"movies\">\r\n\r\n    <!--\r\n- filter bar\r\n-->\r\n\r\n    <!--\r\n- movies grid\r\n-->\r\n\r\n    <div class=\"movies-grid\">\r\n      \r\n${moviesHtml}\r\n\r\n    </div>\r\n\r\n    <!--\r\n- load more button\r\n-->\r\n    <button class=\"load-more\">LOAD MORE</button>\r\n\r\n</section>\r\n`;\r\n    return html;\r\n  }\r\n\r\n  async fetchData(url) {\r\n    let moviesHtml = \"\";\r\n    try {\r\n      const data = await fetch(url).then((res) => res.json());\r\n\r\n      data.forEach((e) => {\r\n        moviesHtml += `  \r\n        <div title=\"${e.Series_Title}\" class=\"movie-card\">\r\n            <div class=\"card-head\">\r\n                <img src=${e.Poster_Link} alt=\"\" class=\"card-img\">\r\n                <div class=\"card-overlay\">\r\n                    <div class=\"bookmark\">\r\n                        <ion-icon name=\"bookmark-outline\"></ion-icon>\r\n                    </div>\r\n                    <div class=\"rating\">\r\n                        <ion-icon name=\"star-outline\"></ion-icon>\r\n                        <span>${e.IMDB_Rating}</span>\r\n                    </div>\r\n                    <div class=\"play\">\r\n                        <ion-icon name=\"play-circle-outline\"></ion-icon>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                    ${e.Series_Title}\r\n                </h3>\r\n                <div class=\"card-info\">\r\n                    <span class=\"genre\">${e.Genre}</span>\r\n                    <span class=\"year\">${e.Released_Year}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n`;\r\n      });\r\n\r\n      return moviesHtml;\r\n    } catch (e) {\r\n      return `<h1> No Match Found</h1>`;\r\n    }\r\n  }\r\n\r\n  generateQyeryString(url) {\r\n    let qyeryString = \"/api/search?\";\r\n    const qyery = url.split(\"?\");\r\n    if (qyery.length > 1) qyeryString += qyery[1];\r\n\r\n    return qyeryString;\r\n  }\r\n}\r\n\r\nmodule.exports = Search;\r\n\n\n//# sourceURL=webpack:///./public/views/Search.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./public/js/index.js");
/******/ 	
/******/ })()
;